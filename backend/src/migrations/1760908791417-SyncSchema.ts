import { MigrationInterface, QueryRunner } from "typeorm";

export class SyncSchema1760908791417 implements MigrationInterface {
    name = 'SyncSchema1760908791417'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_3a92cf6add00043cef9833db1cd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c44ac33a05b144dd0d9ddcf932"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_76e0c2eac19b205cdd0b821efb"`);
        await queryRunner.query(`CREATE TYPE "public"."otp_codes_purpose_enum" AS ENUM('ACCOUNT_DELETION', 'ACCOUNT_SUSPENSION', 'EMAIL_VERIFICATION')`);
        await queryRunner.query(`CREATE TABLE "otp_codes" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(6) NOT NULL, "email" character varying(120) NOT NULL, "purpose" "public"."otp_codes_purpose_enum" NOT NULL, "relatedTenantId" uuid, "expiresAt" TIMESTAMP WITH TIME ZONE NOT NULL, "isUsed" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_9d0487965ac1837d57fec4d6a26" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."journal_entries_type_enum" AS ENUM('SALE', 'SALE_CREDIT', 'SALE_REFUND', 'PURCHASE', 'EXPENSE', 'PAYMENT_RECEIVED', 'PAYMENT_MADE', 'CASH_REGISTER_OPEN', 'CASH_REGISTER_CLOSE', 'CASH_DEPOSIT', 'CASH_WITHDRAWAL', 'ADJUSTMENT', 'OPENING_BALANCE', 'CLOSING', 'OTHER')`);
        await queryRunner.query(`CREATE TYPE "public"."journal_entries_status_enum" AS ENUM('DRAFT', 'CONFIRMED', 'CANCELLED')`);
        await queryRunner.query(`CREATE TABLE "journal_entries" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "entryNumber" character varying NOT NULL, "entryDate" date NOT NULL, "type" "public"."journal_entries_type_enum" NOT NULL, "status" "public"."journal_entries_status_enum" NOT NULL DEFAULT 'CONFIRMED', "description" character varying(500) NOT NULL, "referenceId" uuid, "referenceType" character varying(50), "referenceNumber" character varying(100), "totalDebits" numeric(15,2) NOT NULL DEFAULT '0', "totalCredits" numeric(15,2) NOT NULL DEFAULT '0', "isBalanced" boolean NOT NULL DEFAULT true, "notes" text, "createdBy" uuid NOT NULL, "confirmedBy" uuid, "confirmedAt" TIMESTAMP, "cancelledBy" uuid, "cancelledAt" TIMESTAMP, "cancellationReason" character varying(500), "reversalEntryId" uuid, "tenantId" uuid NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_4b3b30432878ce7cc7882e919be" UNIQUE ("entryNumber"), CONSTRAINT "PK_a70368e64230434457c8d007ab3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8ddb19c8d608eda820581b1df7" ON "journal_entries" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9a5ae6944035051b13a827c061" ON "journal_entries" ("referenceId", "referenceType") `);
        await queryRunner.query(`CREATE INDEX "IDX_cf280e7af2e3bbb739c152da70" ON "journal_entries" ("tenantId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_4f83a0159732fd4dcaf4bcea8e" ON "journal_entries" ("tenantId", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_90b0db4d3b4f47da8401fa30a2" ON "journal_entries" ("tenantId", "entryDate") `);
        await queryRunner.query(`CREATE TYPE "public"."chart_of_accounts_nature_enum" AS ENUM('DEBIT', 'CREDIT')`);
        await queryRunner.query(`CREATE TYPE "public"."chart_of_accounts_type_enum" AS ENUM('ASSET', 'LIABILITY', 'EQUITY', 'INCOME', 'EXPENSE', 'COST')`);
        await queryRunner.query(`CREATE TABLE "chart_of_accounts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(10) NOT NULL, "name" character varying(200) NOT NULL, "description" text, "nature" "public"."chart_of_accounts_nature_enum" NOT NULL, "type" "public"."chart_of_accounts_type_enum" NOT NULL, "isActive" boolean NOT NULL DEFAULT true, "parentAccountId" uuid, "level" integer NOT NULL DEFAULT '4', "tenantId" uuid NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_467c08a2efc78393c647da32bac" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_1d5ed6ca50597ce065aee835ac" ON "chart_of_accounts" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a52d1eedb7683cc2c2120ea2de" ON "chart_of_accounts" ("tenantId", "isActive") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_9ed29bca891369f4902c87bb5c" ON "chart_of_accounts" ("tenantId", "code") `);
        await queryRunner.query(`CREATE TYPE "public"."journal_entry_lines_movementtype_enum" AS ENUM('DEBIT', 'CREDIT')`);
        await queryRunner.query(`CREATE TABLE "journal_entry_lines" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "journalEntryId" uuid NOT NULL, "accountId" uuid NOT NULL, "movementType" "public"."journal_entry_lines_movementtype_enum" NOT NULL, "amount" numeric(15,2) NOT NULL, "description" character varying(500), "lineOrder" integer NOT NULL DEFAULT '0', "referenceId" uuid, "referenceType" character varying(50), "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_b2f60e3664cd9803a829fb61aa4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_34d5d6a407b7724da2e2766b15" ON "journal_entry_lines" ("accountId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b06b5322d679be6e2559132857" ON "journal_entry_lines" ("journalEntryId") `);
        await queryRunner.query(`CREATE TYPE "public"."fiscal_configs_taxregime_enum" AS ENUM('SIMPLIFIED', 'COMMON', 'SPECIAL', 'GRANDES_CONTRIBUYENTES')`);
        await queryRunner.query(`CREATE TYPE "public"."fiscal_configs_persontype_enum" AS ENUM('NATURAL', 'JURIDICA')`);
        await queryRunner.query(`CREATE TYPE "public"."fiscal_configs_vatdeclarationperiod_enum" AS ENUM('MONTHLY', 'BIMONTHLY', 'QUARTERLY')`);
        await queryRunner.query(`CREATE TABLE "fiscal_configs" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "taxRegime" "public"."fiscal_configs_taxregime_enum" NOT NULL DEFAULT 'COMMON', "personType" "public"."fiscal_configs_persontype_enum" NOT NULL DEFAULT 'NATURAL', "nit" character varying(20) NOT NULL, "nitVerificationDigit" character varying(1), "legalName" character varying(200) NOT NULL, "tradeName" character varying(200), "fiscalAddress" character varying(300) NOT NULL, "city" character varying(100) NOT NULL, "state" character varying(100) NOT NULL, "postalCode" character varying(20), "phone" character varying(50), "fiscalEmail" character varying(200), "fiscalResponsibilities" text NOT NULL, "isRetentionAgent" boolean NOT NULL DEFAULT false, "retentionAgentSince" date, "isVATResponsible" boolean NOT NULL DEFAULT true, "vatDeclarationPeriod" "public"."fiscal_configs_vatdeclarationperiod_enum" NOT NULL DEFAULT 'BIMONTHLY', "ciiu" character varying(10), "economicActivity" character varying(300), "hasRUT" boolean NOT NULL DEFAULT false, "rutDocumentUrl" text, "useElectronicInvoicing" boolean NOT NULL DEFAULT false, "electronicInvoiceProvider" character varying(100), "dianResolutionNumber" character varying(100), "dianResolutionDate" date, "invoiceRangeFrom" bigint, "invoiceRangeTo" bigint, "invoicePrefix" character varying(10), "nextInvoiceNumber" bigint NOT NULL DEFAULT '1', "legalRepresentative" character varying(200), "legalRepresentativeId" character varying(20), "accountantName" character varying(200), "accountantProfessionalCard" character varying(50), "fiscalYearStart" integer, "additionalConfig" jsonb, "isConfigured" boolean NOT NULL DEFAULT false, "isVerifiedByAccountant" boolean NOT NULL DEFAULT false, "verifiedAt" TIMESTAMP, "tenantId" uuid NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_5fb14e911f5f4b8df4b15124421" UNIQUE ("tenantId"), CONSTRAINT "REL_5fb14e911f5f4b8df4b1512442" UNIQUE ("tenantId"), CONSTRAINT "PK_0127f5f452a78e5add95c161acf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_5fb14e911f5f4b8df4b1512442" ON "fiscal_configs" ("tenantId") `);
        await queryRunner.query(`CREATE TYPE "public"."expenses_type_enum" AS ENUM('INVENTORY_PURCHASE', 'RENT', 'UTILITIES', 'INTERNET_PHONE', 'PAYROLL', 'PROFESSIONAL_SERVICES', 'INSURANCE', 'MAINTENANCE', 'TRAVEL', 'ADVERTISING', 'OFFICE_SUPPLIES', 'TAXES_FEES', 'OTHER')`);
        await queryRunner.query(`CREATE TYPE "public"."expenses_status_enum" AS ENUM('DRAFT', 'PENDING', 'PAID', 'CANCELLED')`);
        await queryRunner.query(`CREATE TYPE "public"."expenses_paymentmethod_enum" AS ENUM('CASH', 'BANK', 'CARD', 'TRANSFER', 'CREDIT')`);
        await queryRunner.query(`CREATE TABLE "expenses" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "expenseNumber" character varying NOT NULL, "type" "public"."expenses_type_enum" NOT NULL, "status" "public"."expenses_status_enum" NOT NULL DEFAULT 'PENDING', "expenseDate" date NOT NULL, "supplierName" character varying(200), "supplierNit" character varying(20), "invoiceNumber" character varying(100), "subtotal" numeric(12,2) NOT NULL, "taxAmount" numeric(12,2) NOT NULL DEFAULT '0', "total" numeric(12,2) NOT NULL, "paymentMethod" "public"."expenses_paymentmethod_enum" NOT NULL, "paymentDate" date, "description" text, "invoiceImageUrl" text, "ocrData" jsonb, "isOcrExtracted" boolean NOT NULL DEFAULT false, "wasManuallyEdited" boolean NOT NULL DEFAULT false, "journalEntryId" uuid, "createdBy" uuid NOT NULL, "approvedBy" uuid, "approvedAt" TIMESTAMP, "tenantId" uuid NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_57552c177da550b3271a2cfb646" UNIQUE ("expenseNumber"), CONSTRAINT "PK_94c3ceb17e3140abc9282c20610" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_f754faa125acaf008866b6635b" ON "expenses" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_57552c177da550b3271a2cfb64" ON "expenses" ("expenseNumber") `);
        await queryRunner.query(`CREATE INDEX "IDX_fa89adb338da9d9e411dd3d909" ON "expenses" ("tenantId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_3617c297a747552ec11f5d6994" ON "expenses" ("tenantId", "status") `);
        await queryRunner.query(`CREATE INDEX "IDX_4328a7519a9476315b8fc3961a" ON "expenses" ("tenantId", "expenseDate") `);
        await queryRunner.query(`CREATE TYPE "public"."tax_withholdings_type_enum" AS ENUM('RETEFTE', 'RETEIVA', 'RETEICA')`);
        await queryRunner.query(`CREATE TYPE "public"."tax_withholdings_concept_enum" AS ENUM('COMPRAS', 'SERVICIOS_DECLARANTE', 'SERVICIOS_NO_DECLARANTE', 'HONORARIOS_JURIDICA', 'HONORARIOS_NATURAL', 'ARRENDAMIENTO', 'RENDIMIENTOS_FINANCIEROS', 'OTROS')`);
        await queryRunner.query(`CREATE TYPE "public"."tax_withholdings_direction_enum" AS ENUM('RECEIVED', 'PRACTICED')`);
        await queryRunner.query(`CREATE TABLE "tax_withholdings" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "withholdingNumber" character varying(50) NOT NULL, "type" "public"."tax_withholdings_type_enum" NOT NULL, "concept" "public"."tax_withholdings_concept_enum" NOT NULL, "direction" "public"."tax_withholdings_direction_enum" NOT NULL, "withholdingDate" date NOT NULL, "baseAmount" numeric(12,2) NOT NULL, "percentage" numeric(5,2) NOT NULL, "withheldAmount" numeric(12,2) NOT NULL, "thirdPartyName" character varying(200) NOT NULL, "thirdPartyNit" character varying(20) NOT NULL, "certificateNumber" character varying(100), "certificateUrl" text, "saleId" uuid, "expenseId" uuid, "notes" text, "createdBy" uuid NOT NULL, "fiscalYear" integer NOT NULL, "isDeclared" boolean NOT NULL DEFAULT false, "declaredAt" date, "tenantId" uuid NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_d9554686e1de7d88fed985ace58" UNIQUE ("certificateNumber"), CONSTRAINT "PK_9a18d56a02ef098487acd741e6f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_f6762944de3663d9a82679da85" ON "tax_withholdings" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_d9554686e1de7d88fed985ace5" ON "tax_withholdings" ("certificateNumber") `);
        await queryRunner.query(`CREATE INDEX "IDX_4d726d56726d86f0ae09a0e8bc" ON "tax_withholdings" ("tenantId", "direction") `);
        await queryRunner.query(`CREATE INDEX "IDX_5ac13225c14af7fd2812f40b59" ON "tax_withholdings" ("tenantId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_94d0df9ef7610c5693cb46a56a" ON "tax_withholdings" ("tenantId", "withholdingDate") `);
        await queryRunner.query(`ALTER TABLE "sales" ADD "journalEntryId" uuid`);
        await queryRunner.query(`ALTER TABLE "sales" ADD "taxWithholdingId" uuid`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD "barcode" character varying(80)`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD "taxRate" numeric(5,2) NOT NULL DEFAULT '19'`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD "taxIncluded" boolean NOT NULL DEFAULT true`);
        await queryRunner.query(`ALTER TABLE "product_variants" ADD "isTaxExcluded" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "products" ADD "barcode" character varying(80)`);
        await queryRunner.query(`ALTER TABLE "products" ADD "tenantId" uuid`);
        await queryRunner.query(`ALTER TABLE "dian_resolutions" ADD "tenantId" uuid`);
        await queryRunner.query(`ALTER TABLE "categories" ADD "tenantId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "customers" ADD "tenantId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "cash_registers" ADD "journalEntryId" uuid`);
        await queryRunner.query(`ALTER TYPE "public"."users_role_enum" RENAME TO "users_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('SUPER_ADMIN', 'ADMIN', 'MANAGER', 'CASHIER')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."users_role_enum" USING "role"::"text"::"public"."users_role_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'CASHIER'`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum_old"`);
        await queryRunner.query(`CREATE INDEX "IDX_6804855ba1a19523ea57e0769b" ON "products" ("tenantId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_1b6c1ded9006ffc8e024caa715" ON "products" ("tenantId", "sku") `);
        await queryRunner.query(`CREATE INDEX "IDX_46a85229c9953b2b94f768190b" ON "categories" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_37c1a605468d156e6a8f78f1dc" ON "customers" ("tenantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_37c1a605468d156e6a8f78f1dc" ON "customers" ("tenantId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_7c2e7e05bcc42557130da81f6d" ON "customers" ("tenantId", "documentType", "documentNumber") `);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_3a92cf6add00043cef9833db1cd" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "products" ADD CONSTRAINT "FK_6804855ba1a19523ea57e0769b4" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "dian_resolutions" ADD CONSTRAINT "FK_c72c4832bd12c9f83c1f3b0f169" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "categories" ADD CONSTRAINT "FK_46a85229c9953b2b94f768190b2" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "customers" ADD CONSTRAINT "FK_37c1a605468d156e6a8f78f1dc5" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_076ea8b0d82ae602cb3364cfbed" FOREIGN KEY ("createdBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_97958558a0a85c9958aa6a18e8e" FOREIGN KEY ("confirmedBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_1fc4c01c393e80c1c4e9032359a" FOREIGN KEY ("cancelledBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_41891020be5293d0fd305c52574" FOREIGN KEY ("reversalEntryId") REFERENCES "journal_entries"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entries" ADD CONSTRAINT "FK_8ddb19c8d608eda820581b1df72" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chart_of_accounts" ADD CONSTRAINT "FK_3fc1730c76801339d6e545a2f18" FOREIGN KEY ("parentAccountId") REFERENCES "chart_of_accounts"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "chart_of_accounts" ADD CONSTRAINT "FK_1d5ed6ca50597ce065aee835ac1" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entry_lines" ADD CONSTRAINT "FK_b06b5322d679be6e2559132857d" FOREIGN KEY ("journalEntryId") REFERENCES "journal_entries"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "journal_entry_lines" ADD CONSTRAINT "FK_34d5d6a407b7724da2e2766b15e" FOREIGN KEY ("accountId") REFERENCES "chart_of_accounts"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "fiscal_configs" ADD CONSTRAINT "FK_5fb14e911f5f4b8df4b15124421" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_b3973e2f9fb5680c2d1995090c5" FOREIGN KEY ("journalEntryId") REFERENCES "journal_entries"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_26da15632f6073c3708f6219201" FOREIGN KEY ("createdBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_3f6a584163f71a7f208c8c99981" FOREIGN KEY ("approvedBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expenses" ADD CONSTRAINT "FK_f754faa125acaf008866b6635bc" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" ADD CONSTRAINT "FK_6bad43cd0d073d76fd9b7b17cf2" FOREIGN KEY ("saleId") REFERENCES "sales"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" ADD CONSTRAINT "FK_fc2d52de1d416c5d520d12d3b0d" FOREIGN KEY ("expenseId") REFERENCES "expenses"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" ADD CONSTRAINT "FK_02ebcd080c56d16b09d8431500c" FOREIGN KEY ("createdBy") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" ADD CONSTRAINT "FK_f6762944de3663d9a82679da852" FOREIGN KEY ("tenantId") REFERENCES "tenants"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "tax_withholdings" DROP CONSTRAINT "FK_f6762944de3663d9a82679da852"`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" DROP CONSTRAINT "FK_02ebcd080c56d16b09d8431500c"`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" DROP CONSTRAINT "FK_fc2d52de1d416c5d520d12d3b0d"`);
        await queryRunner.query(`ALTER TABLE "tax_withholdings" DROP CONSTRAINT "FK_6bad43cd0d073d76fd9b7b17cf2"`);
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_f754faa125acaf008866b6635bc"`);
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_3f6a584163f71a7f208c8c99981"`);
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_26da15632f6073c3708f6219201"`);
        await queryRunner.query(`ALTER TABLE "expenses" DROP CONSTRAINT "FK_b3973e2f9fb5680c2d1995090c5"`);
        await queryRunner.query(`ALTER TABLE "fiscal_configs" DROP CONSTRAINT "FK_5fb14e911f5f4b8df4b15124421"`);
        await queryRunner.query(`ALTER TABLE "journal_entry_lines" DROP CONSTRAINT "FK_34d5d6a407b7724da2e2766b15e"`);
        await queryRunner.query(`ALTER TABLE "journal_entry_lines" DROP CONSTRAINT "FK_b06b5322d679be6e2559132857d"`);
        await queryRunner.query(`ALTER TABLE "chart_of_accounts" DROP CONSTRAINT "FK_1d5ed6ca50597ce065aee835ac1"`);
        await queryRunner.query(`ALTER TABLE "chart_of_accounts" DROP CONSTRAINT "FK_3fc1730c76801339d6e545a2f18"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_8ddb19c8d608eda820581b1df72"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_41891020be5293d0fd305c52574"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_1fc4c01c393e80c1c4e9032359a"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_97958558a0a85c9958aa6a18e8e"`);
        await queryRunner.query(`ALTER TABLE "journal_entries" DROP CONSTRAINT "FK_076ea8b0d82ae602cb3364cfbed"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP CONSTRAINT "FK_37c1a605468d156e6a8f78f1dc5"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP CONSTRAINT "FK_46a85229c9953b2b94f768190b2"`);
        await queryRunner.query(`ALTER TABLE "dian_resolutions" DROP CONSTRAINT "FK_c72c4832bd12c9f83c1f3b0f169"`);
        await queryRunner.query(`ALTER TABLE "products" DROP CONSTRAINT "FK_6804855ba1a19523ea57e0769b4"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP CONSTRAINT "FK_3a92cf6add00043cef9833db1cd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7c2e7e05bcc42557130da81f6d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_37c1a605468d156e6a8f78f1dc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_37c1a605468d156e6a8f78f1dc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_46a85229c9953b2b94f768190b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1b6c1ded9006ffc8e024caa715"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6804855ba1a19523ea57e0769b"`);
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum_old" AS ENUM('ADMIN', 'MANAGER', 'CASHIER')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."users_role_enum_old" USING "role"::"text"::"public"."users_role_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "role" SET DEFAULT 'CASHIER'`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."users_role_enum_old" RENAME TO "users_role_enum"`);
        await queryRunner.query(`ALTER TABLE "cash_registers" DROP COLUMN "journalEntryId"`);
        await queryRunner.query(`ALTER TABLE "customers" DROP COLUMN "tenantId"`);
        await queryRunner.query(`ALTER TABLE "categories" DROP COLUMN "tenantId"`);
        await queryRunner.query(`ALTER TABLE "dian_resolutions" DROP COLUMN "tenantId"`);
        await queryRunner.query(`ALTER TABLE "products" DROP COLUMN "tenantId"`);
        await queryRunner.query(`ALTER TABLE "products" DROP COLUMN "barcode"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP COLUMN "isTaxExcluded"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP COLUMN "taxIncluded"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP COLUMN "taxRate"`);
        await queryRunner.query(`ALTER TABLE "product_variants" DROP COLUMN "barcode"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP COLUMN "taxWithholdingId"`);
        await queryRunner.query(`ALTER TABLE "sales" DROP COLUMN "journalEntryId"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_94d0df9ef7610c5693cb46a56a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5ac13225c14af7fd2812f40b59"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4d726d56726d86f0ae09a0e8bc"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d9554686e1de7d88fed985ace5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f6762944de3663d9a82679da85"`);
        await queryRunner.query(`DROP TABLE "tax_withholdings"`);
        await queryRunner.query(`DROP TYPE "public"."tax_withholdings_direction_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tax_withholdings_concept_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tax_withholdings_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4328a7519a9476315b8fc3961a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3617c297a747552ec11f5d6994"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fa89adb338da9d9e411dd3d909"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_57552c177da550b3271a2cfb64"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f754faa125acaf008866b6635b"`);
        await queryRunner.query(`DROP TABLE "expenses"`);
        await queryRunner.query(`DROP TYPE "public"."expenses_paymentmethod_enum"`);
        await queryRunner.query(`DROP TYPE "public"."expenses_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."expenses_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5fb14e911f5f4b8df4b1512442"`);
        await queryRunner.query(`DROP TABLE "fiscal_configs"`);
        await queryRunner.query(`DROP TYPE "public"."fiscal_configs_vatdeclarationperiod_enum"`);
        await queryRunner.query(`DROP TYPE "public"."fiscal_configs_persontype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."fiscal_configs_taxregime_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b06b5322d679be6e2559132857"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_34d5d6a407b7724da2e2766b15"`);
        await queryRunner.query(`DROP TABLE "journal_entry_lines"`);
        await queryRunner.query(`DROP TYPE "public"."journal_entry_lines_movementtype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9ed29bca891369f4902c87bb5c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a52d1eedb7683cc2c2120ea2de"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1d5ed6ca50597ce065aee835ac"`);
        await queryRunner.query(`DROP TABLE "chart_of_accounts"`);
        await queryRunner.query(`DROP TYPE "public"."chart_of_accounts_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."chart_of_accounts_nature_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_90b0db4d3b4f47da8401fa30a2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4f83a0159732fd4dcaf4bcea8e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cf280e7af2e3bbb739c152da70"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9a5ae6944035051b13a827c061"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8ddb19c8d608eda820581b1df7"`);
        await queryRunner.query(`DROP TABLE "journal_entries"`);
        await queryRunner.query(`DROP TYPE "public"."journal_entries_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."journal_entries_type_enum"`);
        await queryRunner.query(`DROP TABLE "otp_codes"`);
        await queryRunner.query(`DROP TYPE "public"."otp_codes_purpose_enum"`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_76e0c2eac19b205cdd0b821efb" ON "customers" ("documentNumber", "documentType") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_c44ac33a05b144dd0d9ddcf932" ON "products" ("sku") `);
        await queryRunner.query(`ALTER TABLE "sales" ADD CONSTRAINT "FK_3a92cf6add00043cef9833db1cd" FOREIGN KEY ("customerId") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

}
